/*=============================================================================
Magnitude Analysis:
===============================================================================
Purpose:
    - To quantify data and group results by specific dimensions.
    - For understanding data distribution across categories.

SQL Functions Used:
    - Aggregate Functions: SUM(), COUNT(), AVG()
    - GROUP BY, ORDER BY

	1) Find total customers by countries
	2) Find the total customers by gender
	3) Find total products by category
	4) What is the average costs in each category
	5) What is the total revenue generated for each category
	6) What is the total revenue generated by each customer
	7) What is the distribution of sold items across countries
===============================================================================*/

 -- 1.Find total customers by countries
 SELECT
	 country,
	 COUNT(customer_key) AS total_customers
 FROM gold.dim_customers
 GROUP BY country
 ORDER BY total_customers DESC;

 -- 2.Find the total customers by gender
 SELECT
 gender,
 COUNT(customer_key) AS total_customers
 FROM gold.dim_customers
 GROUP BY gender
 ORDER BY total_customers DESC;

 -- 3.Find total products by category
 SELECT
 category,
 COUNT(product_name) AS total_products
 FROM gold.dim_products
 GROUP BY category
 ORDER BY total_products DESC;

 -- 4.What is the average costs in each category?
 SELECT
 category,
 AVG(cost) AS average_cost
 FROM gold.dim_products
 GROUP BY category
 ORDER BY average_cost DESC;

 -- 5.What is the total revenue generated for each category?
 SELECT
 p.category,
 SUM(f.sales_amount) AS total_revenue
 FROM gold.fact_sales f
 LEFT JOIN gold.dim_products p
 ON f.product_key = p.product_key
 GROUP BY p.category
 ORDER BY total_revenue DESC;

 -- 6.What is the total revenue generated by each customer?
 SELECT
	c.customer_key,
	c.first_name,
	c.last_name,
	SUM(f.sales_amount) AS total_revenue
 FROM gold.fact_sales f
 LEFT JOIN gold.dim_customers c
 ON f.customer_key = c.customer_key
 GROUP BY  c.customer_key, c.first_name, c.last_name
 ORDER BY total_revenue DESC;

 -- 7.What is the distribution of sold items across countries?
SELECT
	c.country,
	SUM(f.quantity) AS total_sold_items
 FROM gold.fact_sales f
 LEFT JOIN gold.dim_customers c
	ON f.customer_key = c.customer_key
 GROUP BY  c.country
 ORDER BY total_sold_items DESC;
